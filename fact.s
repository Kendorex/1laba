.file	"fact.c"
	.text
	.globl	fact
	.type	fact, @function
fact:
.LFB0:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp ; Эта инструкция резервирует 16 байтов для локальных переменных

	; Сохранение значения аргумента функции в отрицательном смещении от адреса базового указателя
	movl	%edi, -4(%rbp)

	; Сравнение значения локальной переменной с нулем
	cmpl	$0, -4(%rbp)
	jne	.L2 ; Переход к метке .L2, если значение не равно нулю, для обработки базового случая рекурсивной функции

	; Значение равно нулю, поэтому устанавливаем результат в 1 и переходим к метке .L3 для возврата значения
	movl	$1, %eax
	jmp	.L3

.L2:
	; Проверка, равно ли значение локальной переменной 1
	cmpl	$1, -4(%rbp)
	jne	.L4 ; Переход к метке .L4, если значение не равно 1

	; Значение равно 1, поэтому устанавливаем результат в 1 и переходим к метке .L3 для возврата значения
	movl	$1, %eax
	jmp	.L3

.L4:
	; Вычитаем 1 из значения локальной переменной
	movl	-4(%rbp), %eax
	subl	$1, %eax
	movl	%eax, %edi

	; Рекурсивный вызов функции fact с аргументом, уменьшенным на 1
	call	fact

	; Умножаем возвращенное значение на исходное значение локальной переменной
	imull	-4(%rbp), %eax

.L3:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc

.LFE0:
	.size	fact, .-fact
	.ident	"GCC: (GNU) 13.1.1 20230429"
	.section	.note.GNU-stack,"",@progbits
